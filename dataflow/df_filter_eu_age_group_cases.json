{
	"name": "df_filter_eu_age_group_cases",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_transformed_age_group_cases",
						"type": "DatasetReference"
					},
					"name": "AgeGroupCasesSource"
				},
				{
					"dataset": {
						"referenceName": "ds_transformed_hospital_admissions_daily",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionsFromEurope"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_transformed_age_group_cases",
						"type": "DatasetReference"
					},
					"name": "AgeGroupCasesSink"
				}
			],
			"transformations": [
				{
					"name": "LookUpEuroCountry"
				},
				{
					"name": "SelectedColumnsForSink"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          population as string,",
				"          age_group_0_14 as string,",
				"          age_group_15_24 as string,",
				"          age_group_25_49 as string,",
				"          age_group_50_64 as string,",
				"          age_group_65_79 as string,",
				"          age_group_80_max as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AgeGroupCasesSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          population as string,",
				"          case_count as string,",
				"          death_count as string,",
				"          reported_date as string,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionsFromEurope",
				"AgeGroupCasesSource, HospitalAdmissionsFromEurope lookup(AgeGroupCasesSource@country == HospitalAdmissionsFromEurope@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookUpEuroCountry",
				"LookUpEuroCountry select(mapColumn(",
				"          country = AgeGroupCasesSource@country,",
				"          country_code_2_digit = AgeGroupCasesSource@country_code_2_digit,",
				"          country_code_3_digit = AgeGroupCasesSource@country_code_3_digit,",
				"          age_group_0_14,",
				"          age_group_15_24,",
				"          age_group_25_49,",
				"          age_group_50_64,",
				"          age_group_65_79,",
				"          age_group_80_max",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectedColumnsForSink",
				"SelectedColumnsForSink sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          population as string,",
				"          age_group_0_14 as string,",
				"          age_group_15_24 as string,",
				"          age_group_25_49 as string,",
				"          age_group_50_64 as string,",
				"          age_group_65_79 as string,",
				"          age_group_80_max as string",
				"     ),",
				"     partitionFileNames:['age_group_transformed.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> AgeGroupCasesSink"
			]
		}
	}
}